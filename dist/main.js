(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>C});var o=n(537),r=n.n(o),a=n(645),i=n.n(a),c=n(667),s=n.n(c),l=new URL(n(783),n.b),u=new URL(n(730),n.b),m=new URL(n(440),n.b),d=new URL(n(895),n.b),p=i()(r()),f=s()(l),h=s()(u),A=s()(m),b=s()(d);p.push([e.id,`@font-face {\n    font-family: 'lora';\n    src: url(${f}) format('woff2'),\n    url(${h}) format('woff'),\n    url(${A}) format('woff2'),\n    url(${b}) format('woff');\n    font-weight: 400;\n    font-style: normal;\n}\n\nbody {\n    font-family: 'lora';\n    background-color: yellowgreen;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\nbutton {\n    font-family: 'lora';\n}\n\nmain {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB;;;0DAGwE;IACxE,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;IACnB,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB",sourcesContent:["@font-face {\n    font-family: 'lora';\n    src: url('./fonts/lora-variablefont_wght-webfont.woff2') format('woff2'),\n    url('./fonts/lora-variablefont_wght-webfont.woff') format('woff'),\n    url('./fonts/lora-italic-variablefont_wght-webfont.woff2') format('woff2'),\n    url('./fonts/lora-italic-variablefont_wght-webfont.woff') format('woff');\n    font-weight: 400;\n    font-style: normal;\n}\n\nbody {\n    font-family: 'lora';\n    background-color: yellowgreen;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\nbutton {\n    font-family: 'lora';\n}\n\nmain {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}"],sourceRoot:""}]);const C=p},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);o&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],l=o.base?s[0]+o.base:s[0],u=a[l]||0,m="".concat(l," ").concat(u);a[l]=u+1;var d=n(m),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var f=r(p,o);o.byIndex=c,t.splice(c,0,{identifier:m,updater:f,references:1})}i.push(m)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var s=o(e,r),l=0;l<a.length;l++){var u=n(a[l]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}a=s}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},895:(e,t,n)=>{e.exports=n.p+"b464e75018d82a05760a.woff"},440:(e,t,n)=>{e.exports=n.p+"432b93fc48b00e22bcc0.woff2"},730:(e,t,n)=>{e.exports=n.p+"fe175dbab9aaae069ecb.woff"},783:(e,t,n)=>{e.exports=n.p+"021a118ae64c84853a21.woff2"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!e;)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{function e(){const e=document.createElement("main"),t=["image","name","text","schedule"];for(let n=0;n<t.length;n++)if("image"===t[n]){const t=document.createElement("img");t.setAttribute("src","food-pexels-dorota-semla.jpg"),t.setAttribute("alt","food"),e.appendChild(t)}else if("name"===t[n]){const t=document.createElement("h1");t.textContent="re: Baratie",e.appendChild(t)}else if("text"===t[n]){const t=document.createElement("div");t.textContent="Lorem ipsum dolor sit amet consectetur adipisicing elit. Eius deserunt repellat incidunt ducimus facilis, accusantium aperiam reprehenderit, nam quia, molestiae perferendis in possimus optio rerum maxime? Dolorem culpa ipsum ullam!",e.appendChild(t)}else if("schedule"===t[n]){const t=document.createElement("div");t.textContent="Tuesday - Friday: 10:00am - 8:00pm Saturday & Sunday: 10am - 12:00pm",e.appendChild(t)}return content.appendChild(e),content}var t=n(379),o=n.n(t),r=n(795),a=n.n(r),i=n(569),c=n.n(i),s=n(565),l=n.n(s),u=n(216),m=n.n(u),d=n(589),p=n.n(d),f=n(426),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=m(),o()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;const A=document.querySelector("#content"),b=document.createElement("header"),C=["Home","Menu","Contact"];for(let e=0;e<C.length;e++){const t=document.createElement("button");t.classList.add(C[e]),t.textContent=C[e],b.appendChild(t)}A.appendChild(b),document.body.appendChild(e());const v=document.querySelector(".Menu"),g=document.querySelector(".Home"),y=document.querySelector(".Contact");v.addEventListener("click",(()=>{A.removeChild(A.lastChild),document.body.appendChild(function(){const e=document.createElement("main"),t=["item1","item2","item3","item4","item5","item6","item7","item8"];for(let n=0;n<t.length;n++){const o=document.createElement("div"),r=document.createElement("img"),a=document.createElement("h2"),i=document.createElement("div");"item1"===t[n]?(r.setAttribute("src","shrimp-fried-rice.jpg"),a.textContent="Shrimp Fried Rice",i.textContent="Php 175.00",o.append(r,a,i),e.appendChild(o)):"item2"===t[n]?(r.setAttribute("src","seafood-marinara-pasta.jpg"),a.textContent="Seafood Marinara Pasta",i.textContent="Php 210.00"):"item3"===t[n]?(r.setAttribute("src","monte-cristo-sandwich.jpg"),a.textContent="monte-cristo-sandwich",i.textContent="Php 140.00"):"item4"===t[n]?(r.setAttribute("src","onigiri.jpg"),a.textContent="Onigiri",i.textContent="Php 145.00"):"item5"===t[n]?(r.setAttribute("src","curry-rice.jpg"),a.textContent="Curry Rice",i.textContent="Php 175.00"):"item6"===t[n]?(r.setAttribute("src","coffee-milkshake.jpg"),a.textContent="Coffee Milkshake",i.textContent="Php 130.00"):"item7"===t[n]?(r.setAttribute("src","devil-fruit-macaron.jpg"),a.textContent="Devil Fruit Macaron",i.textContent="Php 160.00"):"item8"===t[n]&&(r.setAttribute("src","tangerine-posset.jpg"),a.textContent="Tangerine Posset",i.textContent="Php 150.00"),o.append(r,a,i),e.appendChild(o)}return content.appendChild(e),content}())})),g.addEventListener("click",(()=>{A.removeChild(A.lastChild),document.body.appendChild(e())})),y.addEventListener("click",(()=>{A.removeChild(A.lastChild),document.body.appendChild(function(){const e=document.createElement("main"),t=["telephone","email","reservation"];for(let n=0;n<t.length;n++){const o=document.createElement("div");if("telephone"===t[n])o.textContent="Cellphone No.: 777-7777-777";else if("email"===t[n])o.textContent="E-mail: re-baratie@email.com";else if("reservation"===t[n]){const e=document.createElement("form"),t=document.createElement("h3"),n=document.createElement("button"),r=["name","telephone","email","number","textarea"];t.textContent="Make a reservation!",e.appendChild(t);for(let t=0;t<r.length;t++){const n=document.createElement("div"),o=document.createElement("label");if("name"===r[t]){const e=document.createElement("input");e.setAttribute("id","name"),e.setAttribute("type","text"),e.setAttribute("name","name"),o.setAttribute("for","name"),o.textContent="Name: ",n.append(o,e)}else if("telephone"===r[t]){const e=document.createElement("input");e.setAttribute("id","phone"),e.setAttribute("type","telephone"),e.setAttribute("name","phone"),o.setAttribute("for","phone"),o.textContent="Phone No.: ",n.append(o,e)}else if("email"===r[t]){const e=document.createElement("input");e.setAttribute("id","email"),e.setAttribute("type","email"),e.setAttribute("name","name"),o.setAttribute("for","email"),o.textContent="E-mail: ",n.append(o,e)}else if("number"===r[t]){const e=document.createElement("input");e.setAttribute("id","seat"),e.setAttribute("type","number"),e.setAttribute("name","seat"),e.setAttribute("min","1"),e.setAttribute("max","10"),o.setAttribute("for","seat"),o.textContent="Number of seat/s: ",n.append(o,e)}else if("textarea"===r[t]){const e=document.createElement("textarea");e.setAttribute("id","text"),e.setAttribute("cols","30"),e.setAttribute("rows","4"),e.setAttribute("wrap","hard"),e.setAttribute("maxlength","100"),o.setAttribute("for","text"),o.textContent="Comments/Suggestions: ",n.append(o,e)}e.appendChild(n)}n.textContent="Submit",e.appendChild(n),o.appendChild(e)}e.append(o)}return content.appendChild(e),content}())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,